name: Release

on:
  issue_comment:
    types: [created, deleted]
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

concurrency:
  group: release-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    name: Context check
    outputs:
      continue: ${{ steps.check.outputs.continue }}
      workflow: ${{ steps.check.outputs.workflow }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Context check
        id: check
        uses: TrigenSoftware/simple-release-action@v1
        with:
          workflow: check
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch: release
  pull-request:
    runs-on: ubuntu-latest
    name: Pull request
    needs: check
    if: needs.check.outputs.workflow == 'pull-request'
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Create or update pull request
        uses: TrigenSoftware/simple-release-action@v1
        with:
          workflow: pull-request
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch: release
  release:
    runs-on: ubuntu-latest
    name: Release
    needs: check
    if: needs.check.outputs.workflow == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true
          cache: true
          cache-base: main
      - name: Restore Bun Package Cache
        id: restore-bun-cache
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/.bun/install/cache
          key: bun-packages-${{ runner.os }}-v1-${{ hashFiles('bun.lock') }}
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Validate
        id: validate
        run: |
          bun run lint
          bun run typecheck
      - name: Release
        uses: TrigenSoftware/simple-release-action@v1
        with:
          workflow: release
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch: release
